(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{288:function(e,t,s){"use strict";s.r(t);var a=s(14),l=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#打包"}},[e._v("打包")]),t("ul",[t("li",[t("a",{attrs:{href:"#gulp3和gulp4-有什么区别"}},[e._v("gulp3和gulp4，有什么区别？")])]),t("li",[t("a",{attrs:{href:"#如何引入eslint和prettier"}},[e._v("如何引入eslint和prettier？")])]),t("li",[t("a",{attrs:{href:"#babel原理-解析-转换-生成"}},[e._v("babel原理？(解析-转换-生成)")])]),t("li",[t("a",{attrs:{href:"#rollup了解过吗"}},[e._v("rollup了解过吗？")])]),t("li",[t("a",{attrs:{href:"#esbuild"}},[e._v("esbuild")])]),t("li",[t("a",{attrs:{href:"#npm传参"}},[e._v("npm传参")])])])])])]),t("p"),e._v(" "),t("h2",{attrs:{id:"打包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#打包"}},[e._v("#")]),e._v(" 打包")]),e._v(" "),t("h3",{attrs:{id:"gulp3和gulp4-有什么区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gulp3和gulp4-有什么区别"}},[e._v("#")]),e._v(" gulp3和gulp4，有什么区别？")]),e._v(" "),t("ol",[t("li",[e._v("task写法改变，升级4之后已经启动的任务需要用callback或者return，否则任务不会继续往下进行\ngulp.task('task1', (cb) => {\ncb();\n})")]),e._v(" "),t("li",[e._v("gulp4引入了gulp.series和gulp.parallel来串行和并行执行任务。\n现在我们可以用gulp.series来替代原来引入的第三方库sequence来串行执行任务\ngulp.task('pack', Sequence()) => gulp.task('pack', gulp.series());")]),e._v(" "),t("li",[e._v("gulp.task不再支持通过数组的形式传入任务，需要替换成gulp.series()或gulp.parallel()来执行\ngulp.task('default', ['task1', 'task2'])=>gulp.tack('default', gulp.series('task1', 'task2'))")])]),e._v(" "),t("h3",{attrs:{id:"如何引入eslint和prettier"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何引入eslint和prettier"}},[e._v("#")]),e._v(" 如何引入eslint和prettier？")]),e._v(" "),t("p",[e._v("midway的代码风格库是mwts。使用mwts里面为我们定义的默认配置")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('.prettierrc.json =》 创建.prettierrc.js文件，将mwts下的prettierrc配置require进来展开即可\nmodule.exports = {\n...require(\'mwts/.prettierrc.json\'),\n};\n.eslintrc 里面的extends属性继承mwts的配置文件 "extends": "./node_modules/mwts/"\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("h3",{attrs:{id:"babel原理-解析-转换-生成"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#babel原理-解析-转换-生成"}},[e._v("#")]),e._v(" babel原理？(解析-转换-生成)")]),e._v(" "),t("ul",[t("li",[e._v("通过babylon解析es6+代码，得到AST(抽象语法树)->通过babel-traverse对ast进行遍历转译->")]),e._v(" "),t("li",[e._v("得到新的ast->用babel-generator通过抽象语法树生成ES5代码")])]),e._v(" "),t("h4",{attrs:{id:"babel的preset和plugin代表什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#babel的preset和plugin代表什么"}},[e._v("#")]),e._v(" babel的preset和plugin代表什么？")]),e._v(" "),t("ul",[t("li",[e._v("preset是预设，可以把多个plugin封装成一个preset，通过preset来批量引入plugin")]),e._v(" "),t("li",[e._v("配置处理顺序：先plugin再preset。plugin从前到后，preset从后到前")])]),e._v(" "),t("h3",{attrs:{id:"rollup了解过吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rollup了解过吗"}},[e._v("#")]),e._v(" rollup了解过吗？")]),e._v(" "),t("ul",[t("li",[e._v("比webpack更小巧，没有webpack功能强大")]),e._v(" "),t("li",[e._v("支持tree-shaking。支持esm转cjs")]),e._v(" "),t("li",[e._v("rollup打包结果依然可读\n(开发一个应用涉及很多第三方模块，不适合rollup，但如果是设计一个js框架或者类库就比较适合。因为rollup执行效率更高)")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("rollup main.js即可输出打包结果\nrollup main.js --file bundle.js(指定文件) =》 打包到指定文件\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("h3",{attrs:{id:"esbuild"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#esbuild"}},[e._v("#")]),e._v(" esbuild")]),e._v(" "),t("ul",[t("li",[e._v("esbuild 文件(app.jsx) --bundle --outfile=dist.js=>打包到指定文件")]),e._v(" "),t("li",[e._v("主要功能：bundler用来代码编译 minifier功能类似terser")])]),e._v(" "),t("h3",{attrs:{id:"npm传参"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#npm传参"}},[e._v("#")]),e._v(" npm传参")]),e._v(" "),t("ol",[t("li",[e._v('通过--的方式\n如:"dev": npm run test --tt=dev  再通过"test": "echo $npm_config_tt"可以取到  tt的值为dev')]),e._v(" "),t("li",[e._v("通过配置的方式\n如:在package.json中配置\n"),t("code",[e._v('"config": { "ee": 123 } "test": "echo $npm_package_config_ee" 可以取到ee的值是123')])]),e._v(" "),t("li",[e._v("通过script直接传值\n"),t("code",[e._v('"dev": "abc=123 npm run test" "test": "echo $abc" 输出123')])])])])}),[],!1,null,null,null);t.default=l.exports}}]);